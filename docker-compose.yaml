npm install --save-dev @nuxt/typescript-build
{
    "compilerOptions": {
      "target": "es6",
      "module": "esnext",
      "moduleResolution": "node",
      "lib": ["es6", "es7", "esnext", "dom"],
      "esModuleInterop": true,
      "allowJs": true,
      "sourceMap": true,
      "strict": true,
      "jsx": "preserve",
      "noEmit": true,
      "experimentalDecorators": true,
      "baseUrl": ".",
      "paths": {
        "~/*": ["./*"]
      },
      "types": ["@types/node", "@nuxt/types"]
    },
    "exclude": ["node_modules", ".nuxt", "dist"]
  }
  
  export default {
    buildModules: ['@nuxt/typescript-build'],
    modules: [
      '@nuxtjs/axios',
      '@nuxtjs/proxy',
      '@nuxtjs/sitemap'
    ],
  }
  
  <!-- LinkShortener.vue -->
  <template>
    <!-- ... your existing template -->
  </template>
  
  <script lang="ts">
  import { Component, Vue } from 'nuxt-property-decorator';
  
  @Component
  export default class LinkShortener extends Vue {
 
  }
  </script>
  
  <style scoped>
  
  </style>
  
  npm install --save-dev typescript ts-node
  {
    "compilerOptions": {
      "target": "es6",
      "module": "commonjs",
      "strict": true,
      "esModuleInterop": true,
      "skipLibCheck": true,
      "forceConsistentCasingInFileNames": true,
      "outDir": "./dist",
      "rootDir": "./src"
    },
    "include": ["src/**/*.ts"],
    "exclude": ["node_modules", "dist"]
  }
  
  "scripts": {
    "start": "ts-node src/server.ts"
  
  }
  

import express, { Application, Request, Response } from 'express';
import bodyParser from 'body-parser';
import cors from 'cors';
import { MongoClient } from 'mongodb';

const app: Application = express();
app.use(bodyParser.json());
app.use(cors());


app.post('/shorten', async (req: Request, res: Response) => {
  try {

} catch (error) {
    console.error('Error shortening link:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

const port: number = 3001;
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});

FROM node:14

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 3001

CMD ["npm", "start"]

version: '3'

services:
  frontend:
    

  backend:
    build:
      context: ./backend
    ports:
      - '3001:3001'
    depends_on:
      - mongo
    links:
      - mongo

  mongo:
    image: mongo
    ports:
      - '27017:27017'
